# Markdown

## Basics

### Headers

```markdown
The main header should be defined with #

# Header

Chapters should be defined with ##

## Chapter 1

## Chapter 2

And you add a # for each level of nesting on sub-headers.

# Title

## Chapter 1

### Subsection 1

### Subsection 2

## Chapter 2

### Subsection 1

### Subsection 2
```

It would be a better practice to give each header and sub-header a uniquely identifiable name. The listing above is simply to show how the nesting works. But there are many tools that allow for quickly searching documents and making table of contents by headers so practical naming conventions and organization styles make your document more accessible to tools that others may already be using.

### Formatting

If you want to add a space between paragraphs or sentences then two new lines are needed.
Sentences can be written on new-lines and will automatically wrap if only one new line is introduced.
This comes down to personal preference really but it is a style choice I make do to line wrapping in my editor.

Two lines of space creates a new paragraph.
There should also be an empty new line between any header elements or code segments.
Lines should not having trailing spaces and there should be a single new line at the end of the document.
If you continue a line on the next line the editor will treat it as a space.
In case there is any wrapping done by the viewer.

Looking at these paragraphs raw vs how they are rendered should provide a good sense of how the documents are displayed in editor and in a rendered view.

```markdown
If you want to add a space between paragraphs or sentences then two new lines are needed.
Sentences can be written on new-lines and will automatically wrap if only one new line is introduced.
This comes down to personal preference really but it is a style choice I make do to line wrapping in my editor.

Two lines of space creates a new paragraph.
There should also be an empty new line between any header elements or code segments.
Lines should not having trailing spaces and there should be a single new line at the end of the document.
If you continue a line on the next line the editor will treat it as a space.
In case there is any wrapping done by the viewer.

Looking at these paragraphs raw vs how they are rendered should provide a good sense of how the documents are displayed in editor and in a rendered view.
```

### Code Blocks

Code blocks (The inset portions of code you have seen above already) can be defined rather easily.
All you need to do is specify the language and place the code between two sets of triple back-ticks "```".

````markdown
```python
import numpy as np

x = np.array([1, 2, 3, 4])
```
````

In the case above in order to display the code block within the code block it is wrapped in "````" instead of "```" as pictured.
The above code block is displayed as:

```python
import numpy as np

x = np.array([1, 2, 3, 4])
```

### Math Functions

Functions can be defined in-line with $x = y$ and are written as follows.

```markdown
$x=y$
```

Or they can be separated and space formatted in the center of the document as so
$$ x = y $$

```markdown
$$x=y$$
```

## Latex

* Formatting Fractions

$$\frac{(x+1)}{1}$$

```markdown
$$\frac{(x+1)}{1}$$
```
